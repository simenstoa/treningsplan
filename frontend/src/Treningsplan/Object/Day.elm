-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Treningsplan.Object.Day exposing (distance, id, order, workouts)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Treningsplan.InputObject
import Treningsplan.Interface
import Treningsplan.Object
import Treningsplan.Scalar
import Treningsplan.ScalarCodecs
import Treningsplan.Union


{-| -}
distance : SelectionSet (Maybe Int) Treningsplan.Object.Day
distance =
    Object.selectionForField "(Maybe Int)" "distance" [] (Decode.int |> Decode.nullable)


{-| -}
id : SelectionSet (Maybe String) Treningsplan.Object.Day
id =
    Object.selectionForField "(Maybe String)" "id" [] (Decode.string |> Decode.nullable)


{-| -}
order : SelectionSet (Maybe Int) Treningsplan.Object.Day
order =
    Object.selectionForField "(Maybe Int)" "order" [] (Decode.int |> Decode.nullable)


{-| -}
workouts : SelectionSet decodesTo Treningsplan.Object.Workout -> SelectionSet (Maybe (List (Maybe decodesTo))) Treningsplan.Object.Day
workouts object_ =
    Object.selectionForCompositeField "workouts" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
