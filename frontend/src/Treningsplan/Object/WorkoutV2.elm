-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Treningsplan.Object.WorkoutV2 exposing (description, id, name, parts)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Treningsplan.InputObject
import Treningsplan.Interface
import Treningsplan.Object
import Treningsplan.Scalar
import Treningsplan.ScalarCodecs
import Treningsplan.Union


{-| -}
description : SelectionSet (Maybe String) Treningsplan.Object.WorkoutV2
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| -}
id : SelectionSet String Treningsplan.Object.WorkoutV2
id =
    Object.selectionForField "String" "id" [] Decode.string


{-| -}
name : SelectionSet String Treningsplan.Object.WorkoutV2
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| -}
parts : SelectionSet decodesTo Treningsplan.Object.WorkoutPart -> SelectionSet (List decodesTo) Treningsplan.Object.WorkoutV2
parts object_ =
    Object.selectionForCompositeField "parts" [] object_ (identity >> Decode.list)
