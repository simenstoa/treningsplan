-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Treningsplan.Query exposing (WorkoutRequiredArguments, intensityZones, plans, workout, workouts)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Treningsplan.InputObject
import Treningsplan.Interface
import Treningsplan.Object
import Treningsplan.Scalar
import Treningsplan.ScalarCodecs
import Treningsplan.Union


{-| -}
intensityZones : SelectionSet decodesTo Treningsplan.Object.IntensityZone -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
intensityZones object_ =
    Object.selectionForCompositeField "intensityZones" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| -}
plans : SelectionSet decodesTo Treningsplan.Object.Plan -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
plans object_ =
    Object.selectionForCompositeField "plans" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias WorkoutRequiredArguments =
    { id : String }


{-|

  - id - The id of the workout

-}
workout : WorkoutRequiredArguments -> SelectionSet decodesTo Treningsplan.Object.Workout -> SelectionSet (Maybe decodesTo) RootQuery
workout requiredArgs object_ =
    Object.selectionForCompositeField "workout" [ Argument.required "id" requiredArgs.id Encode.string ] object_ (identity >> Decode.nullable)


{-| -}
workouts : SelectionSet decodesTo Treningsplan.Object.Workout -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
workouts object_ =
    Object.selectionForCompositeField "workouts" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
